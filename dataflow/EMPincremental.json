{
	"name": "EMPincremental",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_AllEMPincremental",
						"type": "DatasetReference"
					},
					"name": "AllEMPincremental"
				},
				{
					"dataset": {
						"referenceName": "ds_Employee",
						"type": "DatasetReference"
					},
					"name": "Employee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_EMPSink",
						"type": "DatasetReference"
					},
					"name": "AllEMPSink"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select1"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          Name as string,",
				"          Gender as string,",
				"          Department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AllEMPincremental",
				"source(output(",
				"          Name as string,",
				"          Gender as string,",
				"          Department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employee",
				"AllEMPincremental derive(dummy = 'dummy') ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(dummy),",
				"     MaxID = max(id)) ~> aggregate1",
				"aggregate1, Employee join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 keyGenerate(output(id as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(id =  toString(toInteger(id) + toInteger(MaxID))) ~> derivedColumn2",
				"derivedColumn2 select(mapColumn(",
				"          id,",
				"          Name,",
				"          Gender,",
				"          Department",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"AllEMPincremental, select1 union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string",
				"     ),",
				"     partitionFileNames:['All_EMP_Incremental.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> AllEMPSink"
			]
		}
	}
}